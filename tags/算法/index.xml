<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on Home</title><link>http://plutokaito.github.io/tags/%E7%AE%97%E6%B3%95/</link><description>Recent content in 算法 on Home</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 24 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://plutokaito.github.io/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>缓存 (番外)- 利用 HashMap 和链表实现 LRU_CACHE</title><link>http://plutokaito.github.io/post/simple_lru_cache/</link><pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate><guid>http://plutokaito.github.io/post/simple_lru_cache/</guid><description>学习缓存淘汰策略时, 有种策略为 LRU。 在学习这个算法中，做了一些笔记。 这个不是官方实现，是从 leetCode 中选了一种比较经典的算法来帮助我看懂原理和自己实现方式。</description></item></channel></rss>
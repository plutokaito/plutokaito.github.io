<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>缓存 on Home</title><link>http://plutokaito.github.io/tags/%E7%BC%93%E5%AD%98/</link><description>Recent content in 缓存 on Home</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 11 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://plutokaito.github.io/tags/%E7%BC%93%E5%AD%98/index.xml" rel="self" type="application/rss+xml"/><item><title>缓存 (番外)- 记一次 Redis 的使用空间的优化</title><link>http://plutokaito.github.io/post/redis-optimize/</link><pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate><guid>http://plutokaito.github.io/post/redis-optimize/</guid><description>前段时间公司某台非核心功能的 Redis 实例一直跑满内存。影响了部分功能的正常使用。所以这是一个算是比较重要的优化吧。在这里做一次记录。</description></item><item><title>缓存(一): 概要</title><link>http://plutokaito.github.io/post/cache/</link><pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate><guid>http://plutokaito.github.io/post/cache/</guid><description>前言 本文章主要是讲述了缓存的一些相关知识，可能有很多人都很熟悉这个是什么。我查看了一些资料，将那些讲述的汇集在一起慢慢整理成自己的知识体系。这个是第一篇文章。希望有所帮助吧。接下来我会按照几个问题去讲述。</description></item><item><title>缓存 (番外)- 利用 HashMap 和链表实现 LRU_CACHE</title><link>http://plutokaito.github.io/post/simple_lru_cache/</link><pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate><guid>http://plutokaito.github.io/post/simple_lru_cache/</guid><description>学习缓存淘汰策略时, 有种策略为 LRU。 在学习这个算法中，做了一些笔记。 这个不是官方实现，是从 leetCode 中选了一种比较经典的算法来帮助我看懂原理和自己实现方式。</description></item></channel></rss>